{"version":3,"sources":["views/faq.jsx"],"names":["i","dashboardRoutes","ScrollToTopOnMount","useEffect","window","scrollTo","Faq","props","rest","useState","template","settemplate","getcontent","gettemplate","result","content","className","color","routes","brand","src","require","alt","rightLinks","fixed","changeColorOnScroll","height","md","data-aos","data-aos-duration","ReactHtmlParser"],"mappings":";kOACA,omGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAOA,IAAMC,EAAkB,GAExB,SAASC,IAIL,OAHAC,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,IACI,KAuDIC,UApDH,SAACC,GACT,IAAWC,EAAI,8BAAKD,OAEpB,EAAgCE,qBAAU,mBAAnCC,EAAQ,KAAEC,EAAW,KAC5BR,qBAAU,WACNS,MACD,IACH,IAAMA,EAAU,uCAAG,sGACQC,YAAY,OAAO,KAAD,WAAnCC,EAAM,EAANA,OAEFH,EADAG,EACYA,EAAOC,QAEP,uBACf,2CACJ,kBAPe,mCAQhB,OACI,yBAAKC,UAAU,gBACX,kBAAC,IAAM,eACHC,MAAM,cACNC,OAAQjB,EACRkB,MAAO,yBAAKC,IAAKC,EAAQ,KAAoCC,IAAI,OAAON,UAAU,sBAClFO,WAAY,kBAAC,IAAY,MACzBC,OAAK,EACLC,oBAAqB,CACjBC,OAAQ,GACRT,MAAO,SAEPT,IAER,kBAACN,EAAkB,MACnB,yBAAKc,UAAU,iBACX,yBAAKA,UAAU,yCACX,yBAAKA,UAAU,2CACX,yBAAKA,UAAU,aACX,kBAAC,IAAa,KACV,kBAAC,IAAQ,CAACW,GAAI,GAAIC,WAAS,UAAUC,oBAAkB,QACnD,mCACA,gDAKhB,yBAAKb,UAAU,yBACX,yBAAKA,UAAU,cACdc,IAAgBpB","file":"static/js/16.d7f174c2.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Header from '../components/Header/Header'\nimport HeaderSocial from '../components/Header/HeaderSocial'\nimport { gettemplate } from '../Api/UserActions'\nimport GridContainer from '../components/Grid/GridContainer'\nimport GridItem from '../components/Grid/GridItem'\nimport ReactHtmlParser from \"react-html-parser\"\n\nconst dashboardRoutes = [];\n// Scroll to Top\nfunction ScrollToTopOnMount() {\n    useEffect(() => {\n      window.scrollTo(0, 0);\n    }, []);\n    return null;\n  }\n  \nconst Faq = (props) => {\n    const { ...rest } = props;\n\n    const [template, settemplate] = useState()\n    useEffect(() => {\n        getcontent()\n    }, [])\n    const getcontent = async () => {\n        let { result } = await gettemplate('faq');\n        if (result) {\n            settemplate(result.content);\n        } else {\n            settemplate(\"<h1>No Content</h1>\");\n        }\n    }\n    return (\n        <div className=\"page_wrapper\">\n            <Header\n                color=\"transparent\"\n                routes={dashboardRoutes}\n                brand={<img src={require(\"../assets/images/logo_color.png\")} alt=\"logo\" className=\"brand_logo_mobile\" />}\n                rightLinks={<HeaderSocial />}\n                fixed\n                changeColorOnScroll={{\n                    height: 50,\n                    color: \"dark\",\n                }}\n                {...rest}\n            />\n            <ScrollToTopOnMount />\n            <div className=\"inner_wrapper\">\n                <div className=\"inner_pageheader container-fluid px-0\">\n                    <div className=\"inner_heading_wrapper pool_heading_wrap\">\n                        <div className=\"container\">\n                            <GridContainer>\n                                <GridItem md={12} data-aos=\"fade-up\" data-aos-duration=\"2000\">\n                                    <h2>FAQ</h2>\n                                    <p>-By Soldait .</p>\n                                </GridItem>\n                            </GridContainer>\n                        </div>\n                    </div>\n                    <div className=\"inner_content_wrapper\">\n                        <div className=\"container\"></div>\n                        {ReactHtmlParser(template)}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Faq;"],"sourceRoot":""}